<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scauxg.restaurant.user.mapper.UserMapper">

    <resultMap type="User" id="UserResult">
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="userSex"    column="user_sex"    />
        <result property="userRole"    column="user_role"    />
        <result property="userPassword"    column="user_password"    />
        <result property="userTel"    column="user_tel"    />
    </resultMap>

    <resultMap id="UserVOResult" type="UserVO" extends="UserResult">
        <result property="role" column="role_name" />
    </resultMap>

    <sql id="selectUserVo">
        select user_id, user_name, user_sex, user_role, user_password, user_tel, role_name
        from user u join role r
        on u.user_role = r.role_id
    </sql>

    <select id="selectUserList" parameterType="User" resultMap="UserVOResult">
        <include refid="selectUserVo"/>
        <where>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="userName != null  and userName != '' "> and user_name = #{userName}</if>
            <if test="userSex != null "> and user_sex = #{userSex}</if>
            <if test="userRole != null "> and user_role = #{userRole}</if>
            <if test="userPassword != null "> and user_password = #{userPassword}</if>
            <if test="userTel != null and userTel != '' "> and user_tel = #{userTel}</if>
        </where>
    </select>

    <select id="selectUserById" parameterType="Integer" resultMap="UserVOResult">
        <include refid="selectUserVo"/>
        where user_id = #{userId}
    </select>

    <select id="selectUserPasswordByTel" parameterType="String" resultType="String">
        select user_password from user
        where user_tel = #{user_tel}
    </select>

    <select id="selectRoleByTel" parameterType="String" resultType="String">
        select r.role_name from role r join user u
        on u.user_role = r.role_id
        where u.user_tel = #{user_tel}
    </select>

    <insert id="insertUser" parameterType="User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null  ">user_id,</if>
            <if test="userName != null  and userName != ''  ">user_name,</if>
            <if test="userSex != null  ">user_sex,</if>
            <if test="userRole != null  ">user_role,</if>
            <if test="userPassword != null  ">user_password,</if>
            <if test="userTel != null  and userTel != ''  ">user_tel,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null  ">#{userId},</if>
            <if test="userName != null  and userName != ''  ">#{userName},</if>
            <if test="userSex != null  ">#{userSex},</if>
            <if test="userRole != null  ">#{userRole},</if>
            <if test="userPassword != null  ">#{userPassword},</if>
            <if test="userTel != null  and userTel != ''  ">#{userTel},</if>
        </trim>
    </insert>

    <update id="updateUser" parameterType="User">
        update user
        <trim prefix="SET" suffixOverrides=",">
            <if test="userName != null  and userName != ''  ">user_name = #{userName},</if>
            <if test="userSex != null  ">user_sex = #{userSex},</if>
            <if test="userRole!= null ">user_role = #{userRole},</if>
            <if test="userPassword != null and userPassword != '' ">user_password = #{userPassword},</if>
            <if test="userTel != null and userTel != '' ">user_tel = #{userTel},</if>
        </trim>
        where user_id = #{userId}
    </update>

    <delete id="deleteUserById" parameterType="Integer">
        delete from user where user_id = #{userId}
    </delete>

    <delete id="deleteUserByIds" parameterType="Integer">
        delete from user where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper>