<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scauxg.restaurant.food.mapper.MenuMapper">
    
    <resultMap type="Menu" id="MenuResult">
        <result property="menuId"    column="menu_id"    />
        <result property="menuName"    column="menu_name"    />
        <result property="menuPrice"    column="menu_price"    />
        <result property="menuCategory"    column="menu_category"    />
        <result property="menuRemark"    column="menu_remark"    />
    </resultMap>

    <resultMap id="MenuVOResult" type="MenuVO" extends="MenuResult">
        <result property="category" column="ctg_name" />
    </resultMap>
	
<!--	<sql id="selectMenuVo">
        select menu_id, menu_name, menu_price, menu_category, menu_remark from menu
    </sql>-->

    <sql id="selectMenuVo">
        select menu_id, menu_name, menu_price, menu_category, menu_remark, ctg_name
        from menu m join category c
        on m.menu_category = c.ctg_id
    </sql>
	
    <select id="selectMenuList" parameterType="Menu" resultMap="MenuVOResult">
        <include refid="selectMenuVo"/>
        <where>  
            <if test="menuId != null "> and menu_id = #{menuId}</if>
             <if test="menuName != null  and menuName != '' "> and menu_name = #{menuName}</if>
             <if test="menuPrice != null "> and menu_price = #{menuPrice}</if>
             <if test="menuCategory != null "> and menu_category = #{menuCategory}</if>
             <if test="menuRemark != null  and menuRemark != '' "> and menu_remark = #{menuRemark}</if>
         </where>
    </select>
    
    <select id="selectMenuById" parameterType="Integer" resultMap="MenuVOResult">
        <include refid="selectMenuVo"/>
        where menu_id = #{menuId}
    </select>
        
    <insert id="insertMenu" parameterType="Menu">
        insert into menu
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="menuId != null  ">menu_id,</if>
			<if test="menuName != null  and menuName != ''  ">menu_name,</if>
			<if test="menuPrice != null  ">menu_price,</if>
			<if test="menuCategory != null  ">menu_category,</if>
			<if test="menuRemark != null  and menuRemark != ''  ">menu_remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="menuId != null  ">#{menuId},</if>
			<if test="menuName != null  and menuName != ''  ">#{menuName},</if>
			<if test="menuPrice != null  ">#{menuPrice},</if>
			<if test="menuCategory != null  ">#{menuCategory},</if>
			<if test="menuRemark != null  and menuRemark != ''  ">#{menuRemark},</if>
         </trim>
    </insert>
	 
    <update id="updateMenu" parameterType="Menu">
        update menu
        <trim prefix="SET" suffixOverrides=",">
            <if test="menuName != null  and menuName != ''  ">menu_name = #{menuName},</if>
            <if test="menuPrice != null  ">menu_price = #{menuPrice},</if>
            <if test="menuCategory != null  ">menu_category = #{menuCategory},</if>
            <if test="menuRemark != null  and menuRemark != ''  ">menu_remark = #{menuRemark},</if>
        </trim>
        where menu_id = #{menuId}
    </update>

	<delete id="deleteMenuById" parameterType="Integer">
        delete from menu where menu_id = #{menuId}
    </delete>
	
    <delete id="deleteMenuByIds" parameterType="Integer">
        delete from menu where menu_id in 
        <foreach item="menuId" collection="array" open="(" separator="," close=")">
            #{menuId}
        </foreach>
    </delete>
    
</mapper>